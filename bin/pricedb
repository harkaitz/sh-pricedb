#!/bin/sh -e
#L:
#L:  MIT License
#L:  
#l:  Bug reports, feature requests to gemini|https://harkadev.com/oss
#l:  Copyright (c) 2022 Harkaitz Agirre, harkaitz.aguirre@gmail.com
#L:
#L:  Permission is hereby granted, free of charge, to any person obtaining
#L:  a copy of this software and associated documentation files (the
#L:  "Software"), to deal in the Software without restriction, including
#L:  without limitation the rights to use, copy, modify, merge, publish,
#L:  distribute, sublicense, and/or sell copies of the Software, and to
#L:  permit persons to whom the Software is furnished to do so, subject to
#L:  the following conditions:
#L:
#L:  The above copyright notice and this permission notice shall be
#L:  included in all copies or substantial portions of the Software.
#L:
#L:  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
#L:  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
#L:  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
#L:  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
#L:  LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
#L:  OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
#L:  WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
##:
#h: Usage: $0 [-s]
#h:
#h: Maintain the prices of "commodities" "ledger(1)" in ~/.pricedb updated
#h: by executing commands listed in ~/.pricedb.cfg or ${PRICEDB_CFG}.
#h:
#h: The format of ~/.pricedb.cfg is:
#h:
#h:     COMMODITY CURRENCY COMMAND...
#h:
#h: The format of the generated file in ~/.pricedb is:
#h:
#h:     P DATE COMMODITY NUMBER CURRENCY
#h:
#h: The program supports the following flags:
#h:
#h:     -v : Show configuration.
#h:     -s : Print today prices to standard output.
#h:     -w : Save prices to `~/.pricedb`.
##:
pricedb() {
    local OPTIND optopt opt_v= opt_s= opt_w= PRICES=
    ## Parse command line arguments.
    while getopts "vsw" optopt; do
        case $optopt in
            v) opt_v=y;;
            s) opt_s=y;;
            w) opt_w=y;;
            \?) return 1;;
        esac
    done
    shift $(( $OPTIND - 1 ))
    ## Print variables.
    if test -n "${opt_v}"; then
        printf '%-20s : %s\n'                 \
               PRICEDB_CFG  "${PRICEDB_CFG}"  \
               PRICEDB_FILE "${PRICEDB_FILE}" \
               PRICEDB_DATE "${PRICEDB_DATE}"
    fi
    if test ! -n "${opt_s}${opt_w}" || test ! -f "${PRICEDB_CFG}"; then
        return 0
    fi
    ## Remove old prices.
    if test -n "${opt_w}" && test -e "${PRICEDB_FILE}"; then
        sed -i "\\|^P ${PRICEDB_DATE} |d" "${PRICEDB_FILE}"
    fi
    ## Generate prices.
    sed '/^\#/d' "${PRICEDB_CFG}" | \
    while read commodity currency command; do
        local value="`eval "${command}" || true`"
        if test ! -n "${value}"; then
            echo "${SCRNAME}: ${command}: Failed." >&2
            return 1
        fi
        printf 'P %s %-10s %15f %s\n' \
               "${PRICEDB_DATE}"     \
               "${commodity}"        \
               "${value}"            \
               "${currency}"
    done | \
    tee ${opt_w:+ -a "${PRICEDB_FILE}" } \
        ${opt_s:+ /dev/stderr          } \
        > /dev/null
    
    
    
         

    
}

## -----------------------------------------------------------------------------
PRICEDB_CFG="${PRICEDB_CFG:-${HOME}/.pricedb.cfg}"
PRICEDB_FILE="${PRICEDB_FILE:-${HOME}/.pricedb}"
PRICEDB_DATE="${PRICEDB_DATE:-`date +%Y/%m/%d`}"
SCRNAME="`basename "$0"`"
if test @"${SCRNAME}" = @"pricedb"; then
    case "${1}" in
        ''|-h|--help)
            sed -n 's/^ *#h: \{0,1\}//p' "$0" | sed "s|\\\$0|${SCRNAME}|g"
            echo ""
            sed -n 's/^ *#l: \{0,2\}//p' "$0"
            ;;
        *)
            pricedb "$@"
            ;;
    esac
fi

